# IMPORTANT NOTE: Volume paths mounted on containers are relative to the
# directory that this file is in (`docker/`) and so probably need to start with
# `../` to refer to a directory in the main code checkout

services:

  lb_db:
    image: timescale/timescaledb:2.6.0-pg12
    command: postgres -F
    environment:
      POSTGRES_PASSWORD: 'postgres'

  couchdb:
    image: couchdb:3.2.2
    environment:
      COUCHDB_USER: listenbrainz
      COUCHDB_PASSWORD: listenbrainz
    volumes:
      - ./couchdb_test.ini:/opt/couchdb/etc/local.ini

  redis:
    image: redis:6.2.2

  rabbitmq:
    image: rabbitmq:3.8.16

  listenbrainz:
    build:
      context: ..
      dockerfile: Dockerfile
      target: listenbrainz-dev
    image: listenbrainz
    volumes:
      - ..:/code/listenbrainz:z
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      SQLALCHEMY_WARN_20: 1
      PYTHON_TESTS_RUNNING: 1
    user: "${LB_DOCKER_USER:-root}:${LB_DOCKER_GROUP:-root}"
    depends_on:
      - redis
      - lb_db
      - rabbitmq

  timescale_writer:
    image: listenbrainz
    command: python3 -m "listenbrainz.timescale_writer.timescale_writer"
    depends_on:
      - redis
      - lb_db
      - rabbitmq
    user: "${LB_DOCKER_USER:-root}:${LB_DOCKER_GROUP:-root}"
    environment:
      PYTHON_TESTS_RUNNING: 1

  background_tasks:
    image: listenbrainz
    command: python3 -m "listenbrainz.background.background_tasks"
    depends_on:
      - redis
      - lb_db
    environment:
      PYTHON_TESTS_RUNNING: 1
    restart: unless-stopped
    user: "${LB_DOCKER_USER:-root}:${LB_DOCKER_GROUP:-root}"
    volumes:
      - ..:/code/listenbrainz:z

  frontend_tester:
    build:
      context: ..
      dockerfile: Dockerfile
      target: listenbrainz-frontend-dev
    user: "${LB_DOCKER_USER:-node}:${LB_DOCKER_GROUP:-node}"
    volumes:
      - ../frontend:/code/frontend:z

  websockets:
    image: listenbrainz
    volumes:
      - ..:/code/listenbrainz:z
    command: python manage.py run_websockets -h 0.0.0.0 -p 8102
    user: "${LB_DOCKER_USER:-root}:${LB_DOCKER_GROUP:-root}"
    expose:
      - "8102"
    ports:
      - "8102:8102"
    depends_on:
      - redis
      - rabbitmq

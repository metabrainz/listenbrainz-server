version: "3.4"

# IMPORTANT NOTE: Volume paths mounted on containers are relative to the
# directory that this file is in (`docker/`) and so probably need to start with
# `../` to refer to a directory in the main code checkout

volumes:
  postgres:
  redis:
  influxdb:
  rabbitmq:

services:

  db:
    image: postgres:9.5.3
    volumes:
      - postgres:/var/lib/postgresql/data:z

  redis:
    image: redis:5.0.3
    volumes:
      - redis:/data:z

  influx:
    image: influxdb:1.2.4
    volumes:
      - influxdb:/var/lib/influxdb:z
    environment:
      INFLUXDB_REPORTING_DISABLED: 'true'
      INFLUXDB_META_LOGGING_ENABLED: 'false'
      INFLUXDB_DATA_QUERY_LOG_ENABLED: 'false'
      INFLUXDB_DATA_WAL_LOGGING_ENABLED: 'false'
      INFLUXDB_DATA_DATA_LOGGING_ENABLED: 'false'
      INFLUXDB_HTTP_LOG_ENABLED: 'true'
      INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED: 'false'

  rabbitmq:
    image: rabbitmq:3.6.5
    volumes:
      - rabbitmq:/var/lib/rabbitmq:z

  web:
    build:
      context: ..
      dockerfile: Dockerfile
      target: listenbrainz-dev
    command: python3 /code/listenbrainz/manage.py runserver -h 0.0.0.0 -p 80 -d
    image: web
    volumes:
      - ..:/code/listenbrainz:z
      - ../listenbrainz/webserver/static:/static
    ports:
      - "80:80"
    depends_on:
      - redis
      - db
      - influx
      - rabbitmq

  api_compat:
    image: web
    command: python3 /code/listenbrainz/manage.py run_api_compat_server -h 0.0.0.0 -p 8080 -d
    ports:
      - "8080:8080"
    volumes:
      - ..:/code/listenbrainz:z
    depends_on:
      - redis
      - db
      - influx
      - rabbitmq

  influx_writer:
    image: web
    command: python3 -m "listenbrainz.influx_writer.influx_writer"
    volumes:
      - ..:/code/listenbrainz:z
    depends_on:
      - redis
      - influx
      - rabbitmq

  spotify_reader:
    image: web
    volumes:
      - ..:/code/listenbrainz:z
    command: python3 -m "listenbrainz.spotify_updater.spotify_read_listens"
    depends_on:
      - redis
      - influx
      - rabbitmq

  bigquery:
    image: web
    volumes:
      - ../credentials:/code/credentials:z
      - ..:/code/listenbrainz:z
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: '/code/credentials/bigquery-credentials.json'
    command: python3 -m "listenbrainz.bigquery_writer.bigquery_writer"
    depends_on:
      - redis
      - rabbitmq

  follow_server:
    image: web
    volumes:
      - ..:/code/listenbrainz:z
    command: python manage.py run_follow_server -h 0.0.0.0 -p 8081
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - rabbitmq

  static_builder:
    build:
      context: ..
      dockerfile: docker/Dockerfile.webpack
    command: npm run build:dev
    volumes:
      - ..:/code/listenbrainz:z
      - ../listenbrainz/webserver/static:/static:z


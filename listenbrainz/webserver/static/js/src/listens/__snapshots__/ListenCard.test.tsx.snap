// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListenCard renders correctly for mode = 'listens' 1`] = `
<ListenCard
  currentFeedback={1}
  listen={
    Object {
      "listened_at": 0,
      "playing_now": false,
      "track_metadata": Object {
        "additional_info": Object {
          "artist_mbids": Array [
            "xxxx",
          ],
          "artist_msid": "artist_msid",
          "recording_mbid": "yyyy",
          "recording_msid": "bar",
          "release_mbid": "foo",
        },
        "artist_name": "Moondog",
        "track_name": "Bird's Lament",
      },
      "user_name": "test",
    }
  }
  newAlert={[Function]}
  removeListenCallback={[Function]}
  showTimestamp={true}
  showUsername={true}
  updateFeedbackCallback={[Function]}
  updateRecordingToPin={[Function]}
>
  <ForwardRef
    className="listen-card row     "
    onDoubleClick={[Function]}
  >
    <div
      className="card listen-card row     "
      onDoubleClick={[Function]}
    >
      <div
        className="listen-details"
      >
        <div
          className="ellipsis-2-lines"
          title="Bird's Lament"
        >
          <a
            href="https://musicbrainz.org/recording/yyyy"
            rel="noopener noreferrer"
            target="_blank"
          >
            Bird's Lament
          </a>
        </div>
        <span
          className="small text-muted ellipsis"
          title="Moondog"
        >
          <a
            href="https://musicbrainz.org/artist/xxxx"
            rel="noopener noreferrer"
            target="_blank"
          >
            Moondog
          </a>
        </span>
      </div>
      <div
        className="username-and-timestamp"
      >
        <a
          href="/user/test"
          rel="noopener noreferrer"
          target="_blank"
          title="test"
        >
          test
        </a>
        <span
          className="listen-time"
          title=""
        >
          Jan 01, 1970, 1:00 AM
        </span>
      </div>
      <div
        className="listen-controls"
      >
        <button
          className="btn-transparent play-button"
          onClick={[Function]}
          title="Play"
          type="button"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f144",
                  "M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z",
                ],
                "iconName": "play-circle",
                "prefix": "far",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-play-circle fa-w-16 fa-2x "
              data-icon="play-circle"
              data-prefix="far"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </button>
      </div>
    </div>
  </ForwardRef>
</ListenCard>
`;

exports[`ListenCard renders correctly for mode = 'recent ' 1`] = `
<ListenCard
  currentFeedback={1}
  listen={
    Object {
      "listened_at": 0,
      "playing_now": false,
      "track_metadata": Object {
        "additional_info": Object {
          "artist_mbids": Array [
            "xxxx",
          ],
          "artist_msid": "artist_msid",
          "recording_mbid": "yyyy",
          "recording_msid": "bar",
          "release_mbid": "foo",
        },
        "artist_name": "Moondog",
        "track_name": "Bird's Lament",
      },
      "user_name": "test",
    }
  }
  mode="recent"
  newAlert={[Function]}
  removeListenCallback={[Function]}
  showTimestamp={true}
  showUsername={true}
  updateFeedbackCallback={[Function]}
  updateRecordingToPin={[Function]}
>
  <ForwardRef
    className="listen-card row     "
    onDoubleClick={[Function]}
  >
    <div
      className="card listen-card row     "
      onDoubleClick={[Function]}
    >
      <div
        className="listen-details"
      >
        <div
          className="ellipsis-2-lines"
          title="Bird's Lament"
        >
          <a
            href="https://musicbrainz.org/recording/yyyy"
            rel="noopener noreferrer"
            target="_blank"
          >
            Bird's Lament
          </a>
        </div>
        <span
          className="small text-muted ellipsis"
          title="Moondog"
        >
          <a
            href="https://musicbrainz.org/artist/xxxx"
            rel="noopener noreferrer"
            target="_blank"
          >
            Moondog
          </a>
        </span>
      </div>
      <div
        className="username-and-timestamp"
      >
        <a
          href="/user/test"
          rel="noopener noreferrer"
          target="_blank"
          title="test"
        >
          test
        </a>
        <span
          className="listen-time"
          title=""
        >
          Jan 01, 1970, 1:00 AM
        </span>
      </div>
      <div
        className="listen-controls"
      >
        <button
          className="btn-transparent play-button"
          onClick={[Function]}
          title="Play"
          type="button"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f144",
                  "M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z",
                ],
                "iconName": "play-circle",
                "prefix": "far",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-play-circle fa-w-16 fa-2x "
              data-icon="play-circle"
              data-prefix="far"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </button>
      </div>
    </div>
  </ForwardRef>
</ListenCard>
`;

exports[`ListenCard renders correctly for playing_now listen 1`] = `
<ListenCard
  currentFeedback={1}
  listen={
    Object {
      "listened_at": 0,
      "playing_now": false,
      "track_metadata": Object {
        "additional_info": Object {
          "artist_mbids": Array [
            "xxxx",
          ],
          "artist_msid": "artist_msid",
          "recording_mbid": "yyyy",
          "recording_msid": "bar",
          "release_mbid": "foo",
        },
        "artist_name": "Moondog",
        "track_name": "Bird's Lament",
      },
      "user_name": "test",
    }
  }
  newAlert={[Function]}
  removeListenCallback={[Function]}
  showTimestamp={true}
  showUsername={true}
  updateFeedbackCallback={[Function]}
  updateRecordingToPin={[Function]}
>
  <ForwardRef
    className="listen-card row     "
    onDoubleClick={[Function]}
  >
    <div
      className="card listen-card row     "
      onDoubleClick={[Function]}
    >
      <div
        className="listen-details"
      >
        <div
          className="ellipsis-2-lines"
          title="Bird's Lament"
        >
          <a
            href="https://musicbrainz.org/recording/yyyy"
            rel="noopener noreferrer"
            target="_blank"
          >
            Bird's Lament
          </a>
        </div>
        <span
          className="small text-muted ellipsis"
          title="Moondog"
        >
          <a
            href="https://musicbrainz.org/artist/xxxx"
            rel="noopener noreferrer"
            target="_blank"
          >
            Moondog
          </a>
        </span>
      </div>
      <div
        className="username-and-timestamp"
      >
        <a
          href="/user/test"
          rel="noopener noreferrer"
          target="_blank"
          title="test"
        >
          test
        </a>
        <span
          className="listen-time"
          title=""
        >
          Jan 01, 1970, 1:00 AM
        </span>
      </div>
      <div
        className="listen-controls"
      >
        <button
          className="btn-transparent play-button"
          onClick={[Function]}
          title="Play"
          type="button"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f144",
                  "M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z",
                ],
                "iconName": "play-circle",
                "prefix": "far",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-play-circle fa-w-16 fa-2x "
              data-icon="play-circle"
              data-prefix="far"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </button>
      </div>
    </div>
  </ForwardRef>
</ListenCard>
`;

exports[`ListenCard should render timestamp using preciseTimestamp 1`] = `
<ListenCard
  currentFeedback={1}
  listen={
    Object {
      "listened_at": 0,
      "playing_now": false,
      "track_metadata": Object {
        "additional_info": Object {
          "artist_mbids": Array [
            "xxxx",
          ],
          "artist_msid": "artist_msid",
          "recording_mbid": "yyyy",
          "recording_msid": "bar",
          "release_mbid": "foo",
        },
        "artist_name": "Moondog",
        "track_name": "Bird's Lament",
      },
      "user_name": "test",
    }
  }
  newAlert={[Function]}
  removeListenCallback={[Function]}
  showTimestamp={true}
  showUsername={true}
  updateFeedbackCallback={[Function]}
  updateRecordingToPin={[Function]}
>
  <ForwardRef
    className="listen-card row     "
    onDoubleClick={[Function]}
  >
    <div
      className="card listen-card row     "
      onDoubleClick={[Function]}
    >
      <div
        className="listen-details"
      >
        <div
          className="ellipsis-2-lines"
          title="Bird's Lament"
        >
          <a
            href="https://musicbrainz.org/recording/yyyy"
            rel="noopener noreferrer"
            target="_blank"
          >
            Bird's Lament
          </a>
        </div>
        <span
          className="small text-muted ellipsis"
          title="Moondog"
        >
          <a
            href="https://musicbrainz.org/artist/xxxx"
            rel="noopener noreferrer"
            target="_blank"
          >
            Moondog
          </a>
        </span>
      </div>
      <div
        className="username-and-timestamp"
      >
        <a
          href="/user/test"
          rel="noopener noreferrer"
          target="_blank"
          title="test"
        >
          test
        </a>
        <span
          className="listen-time"
          title=""
        >
          Jan 01, 1970, 1:00 AM
        </span>
      </div>
      <div
        className="listen-controls"
      >
        <button
          className="btn-transparent play-button"
          onClick={[Function]}
          title="Play"
          type="button"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f144",
                  "M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z",
                ],
                "iconName": "play-circle",
                "prefix": "far",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-play-circle fa-w-16 fa-2x "
              data-icon="play-circle"
              data-prefix="far"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </button>
      </div>
    </div>
  </ForwardRef>
</ListenCard>
`;

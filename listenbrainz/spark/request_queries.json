{
  "stats.user.entity.week": {
    "name": "stats.user.entity.week",
    "description": "Entity statistics for all users in the last week",
    "params": ["entity"]
  },
  "stats.user.entity.month": {
    "name": "stats.user.entity.month",
    "description": "Entity statistics for all users in the last month",
    "params": ["entity"]
  },
  "stats.user.entity.year": {
    "name": "stats.user.entity.year",
    "description": "Entity statistics for all users in the last year",
    "params": ["entity"]
  },
  "stats.user.entity.all_time": {
    "name": "stats.user.entity.all_time",
    "description": "All time entity statistics for all users",
    "params": ["entity"]
  },
  "stats.user.listening_activity.week": {
    "name": "stats.user.listening_activity.week",
    "description": "Calculate number of listens for an user on each day of the past and current week.",
    "params": []
  },
  "stats.user.listening_activity.month": {
    "name": "stats.user.listening_activity.month",
    "description": "Calculate number of listens for an user on each day of the past month and current month.",
    "params": []
  },
  "stats.user.listening_activity.year": {
    "name": "stats.user.listening_activity.year",
    "description": "Calculate the number of listens for an user in each month of the past and current year.",
    "params": []
  },
  "stats.user.listening_activity.all_time": {
    "name": "stats.user.listening_activity.all_time",
    "description": "Calculate the number of listens for an user in each year starting from LAST_FM_FOUNDING_YEAR (2002).",
    "params": []
  },
  "import.dump.full": {
    "name": "import.dump.full",
    "description": "Import a new full dump into the spark cluster",
    "params": []
  },
  "cf_recording.recommendations.create_dataframes": {
    "name": "cf_recording.recommendations.create_dataframes",
    "description": "Create dataframes to prepare trainable data.",
    "params": ["train_model_window"]
  },
  "cf_recording.recommendations.train_model": {
    "name": "cf_recording.recommendations.train_model",
    "description": "Train data to yield a model.",
    "params": ["ranks", "lambdas", "iterations", "alpha"]
  },
  "cf_recording.recommendations.candidate_sets": {
    "name": "cf_recording.recommendations.candidate_sets",
    "description": "Create candidate sets to generate recommendations",
    "params": ["recommendation_generation_window", "top_artist_limit", "similar_artist_limit", "users"]
  },
  "cf_recording.recommendations.recommend": {
    "name": "cf_recording.recommendations.recommend",
    "description": "Generate recommendations for all active ListenBrainz users.",
    "params": ["recommendation_top_artist_limit", "recommendation_similar_artist_limit", "users"]
  },
  "import.mapping": {
    "name": "import.mapping",
    "description": "Import msid mbid mapping into the spark cluster.",
    "params": []
  },
  "import.artist_relation": {
    "name": "import.artist_relation",
    "description": "Import artist relation into the spark cluster.",
    "params": []
  }
}

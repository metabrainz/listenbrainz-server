HDFS_HTTP_URI = 'http://hadoop-master:9870' # the URI of the http webclient for HDFS

HDFS_CLUSTER_URI = 'hdfs://hadoop-master:9000' # the URI to be used with Spark

# rabbitmq
RABBITMQ_HOST = "rabbitmq"
RABBITMQ_PORT = 5672
RABBITMQ_USERNAME = "guest"
RABBITMQ_PASSWORD = "guest"
RABBITMQ_VHOST = "/"
MAXIMUM_RABBITMQ_CONNECTIONS = 100

# rabbitmq exchanges and queues
SPARK_REQUEST_EXCHANGE = "spark_request"
SPARK_REQUEST_QUEUE = "spark_request"
SPARK_RESULT_EXCHANGE = "spark_result"
SPARK_RESULT_QUEUE = "spark_result"

# train model
RANKS = [8, 12]
LAMBDAS = [0.1, 10.0]
ITERATIONS = [5, 10]

# train model on X days data
TRAIN_MODEL_WINDOW = 180

# calculate stats on X months data
STATS_CALCULATION_WINDOW = 1

# generate recommendations after every X days
RECOMMENDATION_GENERATION_WINDOW = 7

STEPS_TO_REACH_NEXT_MONTH = 32

# number of recommendations to generate
RECOMMENDATION_TOP_ARTIST_LIMIT = 30
RECOMMENDATION_SIMILAR_ARTIST_LIMIT = 30

# candidate sets
TOP_ARTISTS_LIMIT = 20
SIMILAR_ARTISTS_LIMIT = 10

LOG_SENTRY = {
    'dsn':'',
    'environment': 'development',
}
SENTRY_DSN_PUBLIC = ''

# Model id is made up of two parts.
# String + UUID
# The following var defines the string of which the model id is made up of.
MODEL_ID_PREFIX = 'listenbrainz-recommendation-model'

FTP_SERVER_URI = 'ftp.eu.metabrainz.org'
FTP_MSID_MBID_DIR = '/pub/musicbrainz/listenbrainz/labs/mappings/msid-mbid-mapping-with-matchable/'
FTP_ARTIST_RELATION_DIR = '/pub/musicbrainz/listenbrainz/labs/artist-credit-artist-credit-relations/'
FTP_LISTENS_DIR = '/pub/musicbrainz/listenbrainz/'
